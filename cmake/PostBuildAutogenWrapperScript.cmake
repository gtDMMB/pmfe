#### PostBuildAutogenWrapperScript.cmake : Create the post-build wrapper / runner script source
####                                       to run the PMFE utilities with the correct
####                                       absolute paths local to this build.
#### Author: Maxie D. Schmidt (github.com/maxieds)
#### Created: 2020.11.02

## Set the absolute location of the path to the PMFE sources:
if(APPLE)
    execute_process (
        COMMAND bash -c "greadlink -f ."
        OUTPUT_VARIABLE BuildAbsPath
    )
elseif(UNIX AND NOT APPLE)
    execute_process (
        COMMAND bash -c "readlink -f ."
        OUTPUT_VARIABLE BuildAbsPath
    )
endif()

## Set the build time datestamp for reference:
execute_process (
    COMMAND bash -c "date +'%F @ %T%p (%Y.%m.%d-%H%M%S)'"
    OUTPUT_VARIABLE BuildTimeStamp
)

## Create a record of which GitHub commit or tag the PMFE sources reference:
execute_process (
    COMMAND bash -c "git --no-pager log -1 --format='%H [-- %h --]'"
    OUTPUT_VARIABLE BuildGitCommitHash
)
execute_process (
    COMMAND bash -c "git --no-pager log -1 --format='%ai'"
    OUTPUT_VARIABLE BuildGitCommitDate
)

## Define all of the file placeholders we will substitute the live configuration data into:
## Syntax: "[SUBST_PLACEHOLDER_NAME]->ActualValue" denotes that we will replace the string
##         '${SUBST_PLACEHOLDER_NAME}' with 'ActualValue' below.
list(APPEND PMFEWrapperRunnerScriptSubstsList "[PMFE_BUILD_TIMESTAMP]->${BuildTimeStamp}")
list(APPEND PMFEWrapperRunnerScriptSubstsList "[PMFE_BUILD_GIT_COMMIT_HASH]->${BuildGitCommitHash}")
list(APPEND PMFEWrapperRunnerScriptSubstsList "[PMFE_BUILD_GIT_COMMIT_DATE]->${BuildGitCommitDate}")
list(APPEND PMFEWrapperRunnerScriptSubstsList "[PMFE_BUILD_ABS_BINARY_DIR_PATH]->${BuildAbsPath}")

## Copy the stub header file to the build-time location:
set(PMFEWrapperRunnerScriptStubPath "${buildAbsPath}/wrapper-runner-script/PMFECommandRunner.sh.in")
set(PMFEWrapperRunnerScriptNewPath  "${buildAbsPath}/wrapper-runner-script/PMFECommandRunner.sh")
file(
    COPY ${PMFEWrapperRunnerScriptStubPath}
    DESTINATION ${PMFEWrapperRunnerScriptNewPath}
)
set(PMFEWrapperDevRunnerScriptStubPath "${buildAbsPath}/wrapper-runner-script/PMFEDeveloperCommandRunner.sh.in")
set(PMFEWrapperDevRunnerScriptNewPath  "${buildAbsPath}/wrapper-runner-script/PMFEDeveloperCommandRunner.sh")
file(
    COPY ${PMFEWrapperDevRunnerScriptStubPath}
    DESTINATION ${PMFEWrapperDevRunnerScriptNewPath}
)

## Substitute the placeholders in that file with the live build config information:
function(Func_substPMFEWrapperRunnerScriptParam "${SUBST_VAR_NAME}" "${SUBST_VAR_VALUE}" "${OUTFILE_PATH}")
     message(DEBUG "Substituting ${SUBST_VAR_NAME} -> ${SUBST_VAR_VALUE} in ${OUTFILE_PATH} ...")
     execute_process (
         COMMAND bash -c "sed -i 's/\$\{${SUBST_VAR_NAME}\}/${SUBST_VAR_VALUE}/' ${OUTFILE_PATHh}"
     )
endfunction(Func_substPMFEConfigHeaderParam)

function(Func_substPMFEWrapperRunnerScriptParamFromSpec "${FULL_CONFIG_SUBST_SPEC}" "${OUTFILE_PATH}")
     string(REGEX "(\[[^\ ]+\])->" FuncInput_localParamName "${FULL_CONFIG_SUBST_SPEC}")
     string(REGEX "->[^\ ]+$" FuncInput_localParamValue "${FULL_CONFIG_SUBST_SPEC}")
     Func_substPMFEWrapperRunnerScriptParam(
          "${FuncInput_localParamName}"
          "${FuncInput_localParamValue}"
          "${OUTFILE_PATH}"
     )
endfunction(Func_substPMFEConfigHeaderParamFromSpec)

foreach(PMFE_RUNNER_SCRIPT_SUBST_SPEC ${PMFEWrapperRunnerScriptSubstsList} "${OUTFILE_PATH}")
     Func_substPMFEWrapperRunnerScriptParamFromSpec(
          "${PMFE_RUNNER_SCRIPT_SUBST_SPEC}"
          "${PMFEWrapperRunnerScriptNewPath}"
     )
     Func_substPMFEWrapperRunnerScriptParamFromSpec(
          "${PMFE_RUNNER_SCRIPT_SUBST_SPEC}"
          "${PMFEWrapperDevRunnerScriptNewPath}"
     )
endforeach()

message(STATUS "Installed the autogenerated wrapper (binary runner) scripts into: ")
message(STATUS "  >> \"${PMFEWrapperRunnerScriptNewPath}\" [user runner script]")
message(STATUS "  >> \"${PMFEWrapperRunnerDevScriptNewPath}\" [developer script]\n")
